# Status & Monitoring

–≠–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã.

## üìä Status Check - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞

–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.

**Endpoint:** `GET /v1/status`

### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
- **requestId** (query parameter, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): UUID –∑–∞–ø—Ä–æ—Å–∞.

### –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
```bash
curl "https://api.kolersky.com/v1/status?requestId=550e8400-e29b-41d4-a716-446655440000" \
  -H "Authorization: Bearer your_api_key"
```

### –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
```json
{
  "requestId": "uuid",
  "status": "accepted|processing|success|error",
  "code": 200,
  "output": {
    "progress": "string (0-100%)",
    "collage": {
      "image_url": "string",
      "actions": [
        { "index": 1, "requestId": "request_id_v1" }, // v1
        { "index": 2, "requestId": "request_id_v2" }, // v2
        { "index": 3, "requestId": "request_id_v3" }, // v3
        { "index": 4, "requestId": "request_id_v4" }, // v4
        { "index": 5, "requestId": "request_id_u1" }, // u1
        { "index": 6, "requestId": "request_id_u2" }, // u2
        { "index": 7, "requestId": "request_id_u3" }, // u3
        { "index": 8, "requestId": "request_id_u4" }  // u4
      ]
    },
    "video_urls": ["string"],
    "failReason": "string (–ø—Ä–∏ error)"
  }
}
```

### –°—Ç–∞—Ç—É—Å—ã –æ–ø–µ—Ä–∞—Ü–∏–π
| –°—Ç–∞—Ç—É—Å | –û–ø–∏—Å–∞–Ω–∏–µ | –î–µ–π—Å—Ç–≤–∏—è |
|--------|----------|----------|
| `accepted` | –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É | –ñ–¥–∞—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ |
| `processing` | –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è | –ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É |
| `success` | –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ | –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
| `error` | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ | –ü—Ä–æ–≤–µ—Ä–∏—Ç—å `failReason` |

---

## üìà Usage Statistics - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API.

**Endpoint:** `GET /v1/usage`

### –û—Ç–≤–µ—Ç
```json
{
  "userId": "uuid",
  "period": {
    "start": "2024-01-01T00:00:00.000Z",
    "end": "2024-01-31T23:59:59.999Z"
  },
  "requests": {
    "total": 150,
    "successful": 145,
    "failed": 5,
    "byEndpoint": {
      "/v1/midjourney/generate": 50,
      "/v1/midjourney/variation": 30,
      "/v1/midjourney/upscale": 20
    }
  },
  "credits": {
    "used": 25,
    "remaining": 75
  },
  "limits": {
    "requestsPerDay": 100,
    "creditsPerMonth": 100
  }
}
```

---

## üìä Usage Chart - –ì—Ä–∞—Ñ–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.

**Endpoint:** `GET /v1/usage/chart`

### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
- **period** (query): `day|week|month|year`
- **metric** (query): `requests|credits|errors`

### –ü—Ä–∏–º–µ—Ä
```bash
curl "https://api.kolersky.com/v1/usage/chart?period=week&metric=requests" \
  -H "Authorization: Bearer your_api_key"
```

### –û—Ç–≤–µ—Ç
```json
{
  "period": "week",
  "metric": "requests",
  "data": [
    { "date": "2024-01-01", "value": 25 },
    { "date": "2024-01-02", "value": 30 },
    { "date": "2024-01-03", "value": 45 }
  ]
}
```

---

## üè• Health Check - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è

–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞.

**Endpoint:** `GET /health`

### –û—Ç–≤–µ—Ç
```json
{
  "status": "ok|warning|error",
  "timestamp": "2024-01-01T00:00:00.000Z",
  "version": "1.0.0",
  "uptime": 86400000,
  "services": {
    "database": "ok",
    "redis": "ok",
    "external": "ok"
  }
}
```

---

## üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞

### JavaScript –ø—Ä–∏–º–µ—Ä
```javascript
async function waitForCompletion(requestId: string, apiKey: string, maxAttempts = 60): Promise<any> {
  for (let attempt = 0; attempt < maxAttempts; attempt++) {
    const response = await fetch(`https://api.kolersky.com/v1/status?requestId=${requestId}`, {
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Content-Type': 'application/json'
      }
    });

    const result = await response.json();

    if (result.status === 'success') {
      return result.output;
    }

    if (result.status === 'error') {
      throw new Error(result.output?.failReason || 'Unknown error');
    }

    // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
    await new Promise(resolve => setTimeout(resolve, 5000));
  }

  throw new Error('Operation timeout');
}
```

### Python –ø—Ä–∏–º–µ—Ä
```python
import time
import requests

def wait_for_completion(request_id: str, api_key: str, max_attempts=60):
    url = "https://api.kolersky.com/v1/status"
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }

    for attempt in range(max_attempts):
        response = requests.get(f"{url}?requestId={request_id}", headers=headers)
        result = response.json()

        if result['status'] == 'success':
            return result['output']

        if result['status'] == 'error':
            raise Exception(result['output'].get('failReason', 'Unknown error'))

        time.sleep(5)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥

    raise Exception('Operation timeout')
```

---

## ‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å—Ç–∞—Ç—É—Å–∞

### –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
- **–ü–µ—Ä–≤—ã–µ 30 —Å–µ–∫—É–Ω–¥**: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã.
- **1-2 –º–∏–Ω—É—Ç—ã**: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥.
- **2-5 –º–∏–Ω—É—Ç**: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥.
- **–ü–æ—Å–ª–µ 5 –º–∏–Ω—É—Ç**: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥.

### Exponential backoff
```javascript
function getCheckInterval(attempt: number): number {
  if (attempt < 15) return 2000;      // 0-30 —Å–µ–∫: –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫
  if (attempt < 24) return 5000;      // 30 —Å–µ–∫-2 –º–∏–Ω: –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫
  if (attempt < 36) return 10000;     // 2-5 –º–∏–Ω: –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫
  return 30000;                       // –ü–æ—Å–ª–µ 5 –º–∏–Ω: –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫
}
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤
```javascript
const MAX_ATTEMPTS = 60;
const TIMEOUT_ERROR = 'Operation timed out after 5 minutes';

try {
  const result = await waitForCompletion(requestId, apiKey);
  console.log('Success:', result);
} catch (error) {
  if (error.message.includes('timeout')) {
    console.log('Operation is still processing, check later');
  } else {
    console.error('Error:', error.message);
  }
}
```

---

## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–ª–µ—Ä—Ç—ã

### –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
- **Response Time**: —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ API.
- **Success Rate**: –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
- **Queue Length**: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –æ—á–µ—Ä–µ–¥–∏.
- **Error Rate**: –ø—Ä–æ—Ü–µ–Ω—Ç –æ—à–∏–±–æ–∫ –ø–æ —Ç–∏–ø–∞–º.

### –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∞–ª–µ—Ä—Ç—ã
- Success rate < 95%.
- Average response time > 30 —Å–µ–∫—É–Ω–¥.
- Queue length > 50 –æ–ø–µ—Ä–∞—Ü–∏–π.
- Error rate > 5%.

### –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Å —É—Ä–æ–≤–Ω–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:
- **DEBUG**: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
- **INFO**: –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏.
- **WARN**: –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.
- **ERROR**: –æ—à–∏–±–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.